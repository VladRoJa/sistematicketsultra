"""Refactor catálogo: elimina categoria, subcategoria y detalle, agrega catalogo_clasificacion

Revision ID: 3ef3cc9c65f6
Revises: 4c9d60ab010d
Create Date: 2025-07-24 10:11:37.182725

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3ef3cc9c65f6'
down_revision = '4c9d60ab010d'
branch_labels = None
depends_on = None


def upgrade():
    # --- 1. CREA la nueva tabla flexible ---
    op.create_table('catalogo_clasificacion',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('nombre', sa.String(length=100), nullable=False),
        sa.Column('parent_id', sa.Integer(), nullable=True),
        sa.Column('departamento_id', sa.Integer(), nullable=False),
        sa.Column('nivel', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['departamento_id'], ['departamentos.id']),
        sa.ForeignKeyConstraint(['parent_id'], ['catalogo_clasificacion.id']),
        sa.PrimaryKeyConstraint('id')
    )

    # --- 2. ALTERA tickets: elimina FKs, columnas viejas y agrega la nueva ---
    with op.batch_alter_table('tickets', schema=None) as batch_op:
        # 2.1 Elimina FK de tipo_problema_id
        batch_op.drop_constraint('tickets_tipo_problema_id_fkey', type_='foreignkey')
        # 2.2 Elimina columnas viejas de clasificación
        batch_op.drop_column('categoria')
        batch_op.drop_column('subcategoria')
        batch_op.drop_column('detalle')
        batch_op.drop_column('tipo_problema_id')
        # 2.3 Agrega la nueva columna de clasificación flexible
        batch_op.add_column(sa.Column('clasificacion_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'catalogo_clasificacion', ['clasificacion_id'], ['id'])

    # --- 3. Elimina primero HIJOS, luego PADRES ---
    op.drop_table('detalles')
    op.drop_table('subcategorias')
    op.drop_table('categorias')
    op.drop_table('tipos_problema')
    op.drop_table('sistemas_logicos')
    op.drop_table('migraciones_aplicadas')

    # Si alguna tabla no existe, coméntala temporalmente y prueba de nuevo.

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tickets', schema=None) as batch_op:
        batch_op.add_column(sa.Column('tipo_problema_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('detalle', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('subcategoria', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('categoria', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('tickets_tipo_problema_id_fkey', 'tipos_problema', ['tipo_problema_id'], ['id'])
        batch_op.drop_column('clasificacion_id')

    op.create_table('tipos_problema',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('sistema_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('nombre', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('activo', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['sistema_id'], ['sistemas_logicos.id'], name='tipos_problema_sistema_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='tipos_problema_pkey')
    )
    op.create_table('subcategorias',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('subcategorias_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nombre', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('categoria_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['categoria_id'], ['categorias.id'], name='subcategorias_categoria_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='subcategorias_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('migraciones_aplicadas',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nombre', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('aplicada_en', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='migraciones_aplicadas_pkey'),
    sa.UniqueConstraint('nombre', name='migraciones_aplicadas_nombre_key')
    )
    op.create_table('detalles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nombre', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('subcategoria_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['subcategoria_id'], ['subcategorias.id'], name='detalles_subcategoria_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='detalles_pkey')
    )
    op.create_table('categorias',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nombre', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('departamento_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['departamento_id'], ['departamentos.id'], name='categorias_departamento_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='categorias_pkey')
    )
    op.create_table('sistemas_logicos',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nombre', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('tipo', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('padre_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('activo', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('departamento_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['departamento_id'], ['departamentos.id'], name='sistemas_logicos_departamento_id_fkey'),
    sa.ForeignKeyConstraint(['padre_id'], ['sistemas_logicos.id'], name='sistemas_logicos_padre_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='sistemas_logicos_pkey'),
    sa.UniqueConstraint('nombre', name='sistemas_logicos_nombre_key')
    )
    op.drop_table('catalogo_clasificacion')
    # ### end Alembic commands ###
